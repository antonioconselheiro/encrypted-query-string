window.jest_html_reporters_callback__({"numFailedTestSuites":2,"numFailedTests":5,"numPassedTestSuites":1,"numPassedTests":33,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":38,"startTime":1708027903024,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1708027905049,"runtime":1830,"slow":false,"start":1708027903219},"testFilePath":"/encrypted-uri/packages/ciphers/aes.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["success flow aes"],"duration":25,"failureMessages":[],"fullName":"success flow aes cbc","status":"passed","title":"cbc"},{"ancestorTitles":["success flow aes"],"duration":2,"failureMessages":[],"fullName":"success flow aes ctr","status":"passed","title":"ctr"},{"ancestorTitles":["success flow aes"],"duration":3,"failureMessages":[],"fullName":"success flow aes ecb","status":"passed","title":"ecb"},{"ancestorTitles":["success flow aes"],"duration":3,"failureMessages":[],"fullName":"success flow aes gcm","status":"passed","title":"gcm"},{"ancestorTitles":["success flow aes"],"duration":4,"failureMessages":[],"fullName":"success flow aes siv","status":"passed","title":"siv"}]},{"numFailingTests":2,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1708027905246,"runtime":2021,"slow":false,"start":1708027903225},"testFilePath":"/encrypted-uri/packages/ciphers/kdf.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mkdf success flow › [8] kdf with hasher sha3_256\u001b[39m\u001b[22m\n\n    aes/pcks5: wrong padding byte: 152\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 |\u001b[39m     \u001b[36mconst\u001b[39m derivatedKey \u001b[33m=\u001b[39m kdf(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpassword\u001b[33m,\u001b[39m params\u001b[33m.\u001b[39msalt\u001b[33m,\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdecoded)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m ecb(derivatedKey)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 23 |\u001b[39m       \u001b[33m.\u001b[39mdecrypt(params\u001b[33m.\u001b[39mcipher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36mreturn\u001b[39m bytesToUtf8(result)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m   }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat validatePCKS (\u001b[22m\u001b[2mnode_modules/@noble/ciphers/src/aes.ts\u001b[2m:343:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.decrypt (\u001b[22m\u001b[2mnode_modules/@noble/ciphers/src/aes.ts\u001b[2m:399:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EncryptedURIAESECBDecrypter.decrypt (\u001b[22m\u001b[2maes/ecb/index.ts\u001b[2m:23:8)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.decrypt (\u001b[22m\u001b[2mnode_modules/packages/core/index.ts\u001b[2m:578:69)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mkdf.test.ts\u001b[39m\u001b[0m\u001b[2m:142:42)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mkdf success flow › [9] kdf with hasher sha3_224\u001b[39m\u001b[22m\n\n    aes/pcks5: wrong padding byte: 22\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 |\u001b[39m     \u001b[36mconst\u001b[39m derivatedKey \u001b[33m=\u001b[39m kdf(\u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mpassword\u001b[33m,\u001b[39m params\u001b[33m.\u001b[39msalt\u001b[33m,\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mdecoded)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m ecb(derivatedKey)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 23 |\u001b[39m       \u001b[33m.\u001b[39mdecrypt(params\u001b[33m.\u001b[39mcipher)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     \u001b[36mreturn\u001b[39m bytesToUtf8(result)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 |\u001b[39m   }\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat validatePCKS (\u001b[22m\u001b[2mnode_modules/@noble/ciphers/src/aes.ts\u001b[2m:343:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.decrypt (\u001b[22m\u001b[2mnode_modules/@noble/ciphers/src/aes.ts\u001b[2m:399:16)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat EncryptedURIAESECBDecrypter.decrypt (\u001b[22m\u001b[2maes/ecb/index.ts\u001b[2m:23:8)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.decrypt (\u001b[22m\u001b[2mnode_modules/packages/core/index.ts\u001b[2m:578:69)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mkdf.test.ts\u001b[39m\u001b[0m\u001b[2m:161:42)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["kdf success flow"],"duration":18,"failureMessages":[],"fullName":"kdf success flow [2] kdf include all parameters including default","status":"passed","title":"[2] kdf include all parameters including default"},{"ancestorTitles":["kdf success flow"],"duration":20,"failureMessages":[],"fullName":"kdf success flow [3] kdf with hasher sha512","status":"passed","title":"[3] kdf with hasher sha512"},{"ancestorTitles":["kdf success flow"],"duration":15,"failureMessages":[],"fullName":"kdf success flow [4] kdf with hasher sha512_256","status":"passed","title":"[4] kdf with hasher sha512_256"},{"ancestorTitles":["kdf success flow"],"duration":16,"failureMessages":[],"fullName":"kdf success flow [5] kdf with hasher sha384","status":"passed","title":"[5] kdf with hasher sha384"},{"ancestorTitles":["kdf success flow"],"duration":15,"failureMessages":[],"fullName":"kdf success flow [6] kdf with hasher sha3_512","status":"passed","title":"[6] kdf with hasher sha3_512"},{"ancestorTitles":["kdf success flow"],"duration":8,"failureMessages":[],"fullName":"kdf success flow [7] kdf with hasher sha3_384","status":"passed","title":"[7] kdf with hasher sha3_384"},{"ancestorTitles":["kdf success flow"],"duration":6,"failureMessages":["Error: aes/pcks5: wrong padding byte: 152\n    at validatePCKS (/encrypted-uri/packages/ciphers/node_modules/@noble/ciphers/src/aes.ts:343:45)\n    at Object.decrypt (/encrypted-uri/packages/ciphers/node_modules/@noble/ciphers/src/aes.ts:399:16)\n    at EncryptedURIAESECBDecrypter.decrypt (/encrypted-uri/packages/ciphers/aes/ecb/index.ts:23:8)\n    at Function.decrypt (/encrypted-uri/packages/ciphers/node_modules/packages/core/index.ts:578:69)\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/kdf.test.ts:142:42)"],"fullName":"kdf success flow [8] kdf with hasher sha3_256","status":"failed","title":"[8] kdf with hasher sha3_256"},{"ancestorTitles":["kdf success flow"],"duration":5,"failureMessages":["Error: aes/pcks5: wrong padding byte: 22\n    at validatePCKS (/encrypted-uri/packages/ciphers/node_modules/@noble/ciphers/src/aes.ts:343:45)\n    at Object.decrypt (/encrypted-uri/packages/ciphers/node_modules/@noble/ciphers/src/aes.ts:399:16)\n    at EncryptedURIAESECBDecrypter.decrypt (/encrypted-uri/packages/ciphers/aes/ecb/index.ts:23:8)\n    at Function.decrypt (/encrypted-uri/packages/ciphers/node_modules/packages/core/index.ts:578:69)\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/kdf.test.ts:161:42)"],"fullName":"kdf success flow [9] kdf with hasher sha3_224","status":"failed","title":"[9] kdf with hasher sha3_224"},{"ancestorTitles":["kdf success flow"],"duration":5,"failureMessages":[],"fullName":"kdf success flow [10] kdf with hasher keccak_512","status":"passed","title":"[10] kdf with hasher keccak_512"},{"ancestorTitles":["kdf success flow"],"duration":4,"failureMessages":[],"fullName":"kdf success flow [11] kdf with hasher keccak_384","status":"passed","title":"[11] kdf with hasher keccak_384"},{"ancestorTitles":["kdf success flow"],"duration":3,"failureMessages":[],"fullName":"kdf success flow [12] kdf with hasher keccak_256","status":"passed","title":"[12] kdf with hasher keccak_256"},{"ancestorTitles":["kdf success flow"],"duration":5,"failureMessages":[],"fullName":"kdf success flow [13] kdf with hasher keccak_224","status":"passed","title":"[13] kdf with hasher keccak_224"}]},{"numFailingTests":3,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1708027906597,"runtime":3398,"slow":false,"start":1708027903199},"testFilePath":"/encrypted-uri/packages/ciphers/params.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mhashing customization › [6] kdf with hasher sha3_256\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"sha3_256\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 139 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mc)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 140 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mdklen)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 141 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mh)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'sha3_256'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 143 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 144 |\u001b[39m   it(\u001b[32m'[7] kdf with hasher sha3_224'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mparams.test.ts\u001b[39m\u001b[0m\u001b[2m:141:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mhashing customization › [7] kdf with hasher sha3_224\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"sha3_224\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 162 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mc)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 163 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mdklen)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 164 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mh)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'sha3_224'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 165 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 166 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 167 |\u001b[39m   it(\u001b[32m'[8] kdf with hasher keccak_512'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mparams.test.ts\u001b[39m\u001b[0m\u001b[2m:164:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mconfigs of defaults › [3] ignoreDefaultAlgorithm as true\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m\"aes/cbc\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 398 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 399 |\u001b[39m     \u001b[36mconst\u001b[39m parser \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mEncryptedURIParser\u001b[39m(encoded)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 400 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39malgorithm)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'aes/cbc'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 401 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mkdf)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'pbkdf2'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 402 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mc)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'32'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 403 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mdklen)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'32'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mparams.test.ts\u001b[39m\u001b[0m\u001b[2m:400:38)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["hashing customization"],"duration":26,"failureMessages":[],"fullName":"hashing customization [1] kdf with hasher sha512","status":"passed","title":"[1] kdf with hasher sha512"},{"ancestorTitles":["hashing customization"],"duration":7,"failureMessages":[],"fullName":"hashing customization [2] kdf with hasher sha512_256","status":"passed","title":"[2] kdf with hasher sha512_256"},{"ancestorTitles":["hashing customization"],"duration":8,"failureMessages":[],"fullName":"hashing customization [3] kdf with hasher sha384","status":"passed","title":"[3] kdf with hasher sha384"},{"ancestorTitles":["hashing customization"],"duration":9,"failureMessages":[],"fullName":"hashing customization [4] kdf with hasher sha3_512","status":"passed","title":"[4] kdf with hasher sha3_512"},{"ancestorTitles":["hashing customization"],"duration":3,"failureMessages":[],"fullName":"hashing customization [5] kdf with hasher sha3_384","status":"passed","title":"[5] kdf with hasher sha3_384"},{"ancestorTitles":["hashing customization"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"sha3_256\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/params.test.ts:141:38)"],"fullName":"hashing customization [6] kdf with hasher sha3_256","status":"failed","title":"[6] kdf with hasher sha3_256"},{"ancestorTitles":["hashing customization"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"sha3_224\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/params.test.ts:164:38)"],"fullName":"hashing customization [7] kdf with hasher sha3_224","status":"failed","title":"[7] kdf with hasher sha3_224"},{"ancestorTitles":["hashing customization"],"duration":3,"failureMessages":[],"fullName":"hashing customization [8] kdf with hasher keccak_512","status":"passed","title":"[8] kdf with hasher keccak_512"},{"ancestorTitles":["hashing customization"],"duration":3,"failureMessages":[],"fullName":"hashing customization [9] kdf with hasher keccak_384","status":"passed","title":"[9] kdf with hasher keccak_384"},{"ancestorTitles":["hashing customization"],"duration":3,"failureMessages":[],"fullName":"hashing customization [10] kdf with hasher keccak_256","status":"passed","title":"[10] kdf with hasher keccak_256"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":1205,"failureMessages":[],"fullName":"checking if params are correctly encoded [1] overriding default values in decrypt","status":"passed","title":"[1] overriding default values in decrypt"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":2,"failureMessages":[],"fullName":"checking if params are correctly encoded [2] kdf include all parameters including default","status":"passed","title":"[2] kdf include all parameters including default"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":1,"failureMessages":[],"fullName":"checking if params are correctly encoded [3] kdf with algorithm not set","status":"passed","title":"[3] kdf with algorithm not set"},{"ancestorTitles":["configs of defaults"],"duration":1,"failureMessages":[],"fullName":"configs of defaults [1] ignoreDefaults as true","status":"passed","title":"[1] ignoreDefaults as true"},{"ancestorTitles":["configs of defaults"],"duration":2,"failureMessages":[],"fullName":"configs of defaults [2] ignoreDefaults as false","status":"passed","title":"[2] ignoreDefaults as false"},{"ancestorTitles":["configs of defaults"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m\"aes/cbc\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/params.test.ts:400:38)"],"fullName":"configs of defaults [3] ignoreDefaultAlgorithm as true","status":"failed","title":"[3] ignoreDefaultAlgorithm as true"},{"ancestorTitles":["configs of defaults"],"duration":1,"failureMessages":[],"fullName":"configs of defaults [4] ignoreDefaultValues as true","status":"passed","title":"[4] ignoreDefaultValues as true"},{"ancestorTitles":["configs of defaults"],"duration":1,"failureMessages":[],"fullName":"configs of defaults [5] ignoreMandatoryParamName as true","status":"passed","title":"[5] ignoreMandatoryParamName as true"},{"ancestorTitles":["configs of defaults"],"duration":1,"failureMessages":[],"fullName":"configs of defaults [6] ignoreDefaultAlgorithm and ignoreMandatoryParamName as true","status":"passed","title":"[6] ignoreDefaultAlgorithm and ignoreMandatoryParamName as true"},{"ancestorTitles":["configs of defaults"],"duration":1,"failureMessages":[],"fullName":"configs of defaults [7] ignoreDefaultAlgorithm and ignoreDefaultValues as true","status":"passed","title":"[7] ignoreDefaultAlgorithm and ignoreDefaultValues as true"},{"ancestorTitles":["configs of defaults"],"duration":1,"failureMessages":[],"fullName":"configs of defaults [8] ignoreDefaultValues and ignoreMandatoryParamName as true","status":"passed","title":"[8] ignoreDefaultValues and ignoreMandatoryParamName as true"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"/encrypted-uri/packages/ciphers/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/encrypted-uri/packages/ciphers/node_modules/jest-html-reporters/index.js",{"publicPath":"../../docs/ciphers","filename":"test-report.html","expand":true}]],"rootDir":"/encrypted-uri/packages/ciphers","runTestsByPath":false,"seed":855915441,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/encrypted-uri/packages/ciphers/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1708027906623,"_reporterOptions":{"publicPath":"../../docs/ciphers","filename":"test-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})