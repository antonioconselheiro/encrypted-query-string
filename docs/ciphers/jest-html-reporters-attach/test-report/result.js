window.jest_html_reporters_callback__({"numFailedTestSuites":3,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":16,"numPendingTestSuites":0,"numPendingTests":12,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":32,"startTime":1707783972070,"success":false,"testResults":[{"numFailingTests":1,"numPassingTests":5,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1707783981442,"runtime":8571,"slow":true,"start":1707783972871},"testFilePath":"/encrypted-uri/packages/ciphers/aes.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1msuccess flow aes › cbc generated from other implementation with the same algorithm type and params\u001b[39m\u001b[22m\n\n    OperationError: The operation failed for an operation-specific reason\n\u001b[2m\u001b[22m\n\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["success flow aes"],"duration":173,"failureMessages":[],"fullName":"success flow aes cbc","status":"passed","title":"cbc"},{"ancestorTitles":["success flow aes"],"duration":16,"failureMessages":["OperationError: The operation failed for an operation-specific reason\n    at new DOMException (node:internal/per_context/domexception:53:5)\n    at __node_internal_ (node:internal/util:695:10)\n    at AESCipherJob.onDone (node:internal/crypto/util:420:19)"],"fullName":"success flow aes cbc generated from other implementation with the same algorithm type and params","status":"failed","title":"cbc generated from other implementation with the same algorithm type and params"},{"ancestorTitles":["success flow aes"],"duration":21,"failureMessages":[],"fullName":"success flow aes ctr","status":"passed","title":"ctr"},{"ancestorTitles":["success flow aes"],"duration":25,"failureMessages":[],"fullName":"success flow aes ecb","status":"passed","title":"ecb"},{"ancestorTitles":["success flow aes"],"duration":19,"failureMessages":[],"fullName":"success flow aes gcm","status":"passed","title":"gcm"},{"ancestorTitles":["success flow aes"],"duration":21,"failureMessages":[],"fullName":"success flow aes siv","status":"passed","title":"siv"}]},{"numFailingTests":2,"numPassingTests":11,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1707783981924,"runtime":9047,"slow":true,"start":1707783972877},"testFilePath":"/encrypted-uri/packages/ciphers/params.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchecking if params are correctly encoded › [12] kdf with hasher keccak_256\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mundefined\u001b[39m\n    Received: \u001b[31m\"aes/cbc\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 281 |\u001b[39m     \u001b[36mconst\u001b[39m parser \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mEncryptedURIParser\u001b[39m(encoded)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 282 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mkdf)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 283 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39malgorithm)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 284 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mc)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 285 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mdklen)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 286 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mh)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'keccak_256'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mparams.test.ts\u001b[39m\u001b[0m\u001b[2m:283:38)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mchecking if params are correctly encoded › [13] kdf with hasher keccak_224\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32mundefined\u001b[39m\n    Received: \u001b[31m\"aes/cbc\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 304 |\u001b[39m     \u001b[36mconst\u001b[39m parser \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mEncryptedURIParser\u001b[39m(encoded)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 305 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mkdf)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 306 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39malgorithm)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 307 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mc)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 308 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mdklen)\u001b[33m.\u001b[39mtoEqual(undefined)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 309 |\u001b[39m     expect(parser\u001b[33m.\u001b[39mdecoded\u001b[33m.\u001b[39mparams\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mh)\u001b[33m.\u001b[39mtoEqual(\u001b[32m'keccak_224'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mparams.test.ts\u001b[39m\u001b[0m\u001b[2m:306:38)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["checking if params are correctly encoded"],"duration":179,"failureMessages":[],"fullName":"checking if params are correctly encoded [1] overriding default values in decrypt","status":"passed","title":"[1] overriding default values in decrypt"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":17,"failureMessages":[],"fullName":"checking if params are correctly encoded [2] kdf include all parameters including default","status":"passed","title":"[2] kdf include all parameters including default"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":16,"failureMessages":[],"fullName":"checking if params are correctly encoded [3] kdf with hasher sha512","status":"passed","title":"[3] kdf with hasher sha512"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":11,"failureMessages":[],"fullName":"checking if params are correctly encoded [4] kdf with hasher sha512_256","status":"passed","title":"[4] kdf with hasher sha512_256"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":20,"failureMessages":[],"fullName":"checking if params are correctly encoded [5] kdf with hasher sha384","status":"passed","title":"[5] kdf with hasher sha384"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":11,"failureMessages":[],"fullName":"checking if params are correctly encoded [6] kdf with hasher sha3_512","status":"passed","title":"[6] kdf with hasher sha3_512"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":23,"failureMessages":[],"fullName":"checking if params are correctly encoded [7] kdf with hasher sha3_384","status":"passed","title":"[7] kdf with hasher sha3_384"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":13,"failureMessages":[],"fullName":"checking if params are correctly encoded [8] kdf with hasher sha3_256","status":"passed","title":"[8] kdf with hasher sha3_256"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":11,"failureMessages":[],"fullName":"checking if params are correctly encoded [9] kdf with hasher sha3_224","status":"passed","title":"[9] kdf with hasher sha3_224"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":14,"failureMessages":[],"fullName":"checking if params are correctly encoded [10] kdf with hasher keccak_512","status":"passed","title":"[10] kdf with hasher keccak_512"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":10,"failureMessages":[],"fullName":"checking if params are correctly encoded [11] kdf with hasher keccak_384","status":"passed","title":"[11] kdf with hasher keccak_384"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":14,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mundefined\u001b[39m\nReceived: \u001b[31m\"aes/cbc\"\u001b[39m\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/params.test.ts:283:38)"],"fullName":"checking if params are correctly encoded [12] kdf with hasher keccak_256","status":"failed","title":"[12] kdf with hasher keccak_256"},{"ancestorTitles":["checking if params are correctly encoded"],"duration":10,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32mundefined\u001b[39m\nReceived: \u001b[31m\"aes/cbc\"\u001b[39m\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/params.test.ts:306:38)"],"fullName":"checking if params are correctly encoded [13] kdf with hasher keccak_224","status":"failed","title":"[13] kdf with hasher keccak_224"}]},{"numFailingTests":1,"numPassingTests":0,"numPendingTests":12,"numTodoTests":0,"perfStats":{"end":1707783982544,"runtime":9693,"slow":true,"start":1707783972851},"testFilePath":"/encrypted-uri/packages/ciphers/kdf.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mkdf failure flow › [1] overriding kdf config with wrong default values\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: not \u001b[32m\"mensagem secreta, favor não ler em voz alta\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 256 |\u001b[39m       derivateKeyLength\u001b[33m:\u001b[39m \u001b[35m32\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 257 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 258 |\u001b[39m     expect(decrypted)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoEqual(originalMessage)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 259 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 260 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mkdf.test.ts\u001b[39m\u001b[0m\u001b[2m:258:27)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [2] kdf include all parameters including default","status":"pending","title":"[2] kdf include all parameters including default"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [3] kdf with hasher sha512","status":"pending","title":"[3] kdf with hasher sha512"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [4] kdf with hasher sha512_256","status":"pending","title":"[4] kdf with hasher sha512_256"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [5] kdf with hasher sha384","status":"pending","title":"[5] kdf with hasher sha384"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [6] kdf with hasher sha3_512","status":"pending","title":"[6] kdf with hasher sha3_512"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [7] kdf with hasher sha3_384","status":"pending","title":"[7] kdf with hasher sha3_384"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [8] kdf with hasher sha3_256","status":"pending","title":"[8] kdf with hasher sha3_256"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [9] kdf with hasher sha3_224","status":"pending","title":"[9] kdf with hasher sha3_224"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [10] kdf with hasher keccak_512","status":"pending","title":"[10] kdf with hasher keccak_512"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [11] kdf with hasher keccak_384","status":"pending","title":"[11] kdf with hasher keccak_384"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [12] kdf with hasher keccak_256","status":"pending","title":"[12] kdf with hasher keccak_256"},{"ancestorTitles":["kdf success flow"],"duration":null,"failureMessages":[],"fullName":"kdf success flow [13] kdf with hasher keccak_224","status":"pending","title":"[13] kdf with hasher keccak_224"},{"ancestorTitles":["kdf failure flow"],"duration":129,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: not \u001b[32m\"mensagem secreta, favor não ler em voz alta\"\u001b[39m\n\n    at Object.<anonymous> (/encrypted-uri/packages/ciphers/kdf.test.ts:258:27)"],"fullName":"kdf failure flow [1] overriding kdf config with wrong default values","status":"failed","title":"[1] overriding kdf config with wrong default values"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"/encrypted-uri/packages/ciphers/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/encrypted-uri/packages/ciphers/node_modules/jest-html-reporters/index.js",{"publicPath":"../../docs/ciphers","filename":"test-report.html","expand":true}]],"rootDir":"/encrypted-uri/packages/ciphers","runTestsByPath":false,"seed":-1461428872,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/encrypted-uri/packages/ciphers/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1707783982653,"_reporterOptions":{"publicPath":"../../docs/ciphers","filename":"test-report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})